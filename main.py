import json
import random
import requests
import vk_api
from vk_api.bot_longpoll import VkBotEventType, VkBotLongPoll
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from config import Config
from api import Api
from users import Users
from rcon import Rcon


def getSettings():
    config_settings = Config(file="settings.json", mode="json")
    return config_settings


def auth():
    try:
        vk = vk_api.VkApi(token=getSettings().get('token'))
        group_id = getSettings().get('group_id')
        long_poll = VkBotLongPoll(vk=vk, group_id=group_id)
        print('[!] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!')
        return long_poll
    except Exception as error:
        print(f'[!] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞!\n[!] –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ -> {error}')


def menu():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button(label='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button(label='–¢–æ–ø –æ—Ç—á–µ—Ç–æ–≤', color=VkKeyboardColor.SECONDARY)
    keyboard.add_button(label='–¢–æ–ø –≤–∞—Ä–Ω–æ–≤', color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button(label='–¢–æ–ø –º–µ–¥–∞–ª–µ–π', color=VkKeyboardColor.SECONDARY)
    keyboard.add_button(label='–¢–æ–ø –±–∞–ª–∞–Ω—Å–æ–≤', color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button(label='–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button(label='–ú–∞–≥–∞–∑–∏–Ω', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button(label='–û–Ω–ª–∞–π–Ω', color=VkKeyboardColor.PRIMARY)
    keyboard.add_button(label='Admin panel', color=VkKeyboardColor.NEGATIVE)
    return keyboard


def admin_menu():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button(label='–ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', color=VkKeyboardColor.PRIMARY)
    keyboard.add_button(label='–ê–π–¥–∏—à–Ω–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', color=VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button(label='–°–±—Ä–æ—Å –¥–Ω–µ–≤–Ω–æ–≥–æ —Ç–æ–ø–∞', color=VkKeyboardColor.SECONDARY)
    keyboard.add_button(label='–°–±—Ä–æ—Å –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ç–æ–ø–∞', color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button(label='–í –º–µ–Ω—é', color=VkKeyboardColor.POSITIVE)
    return keyboard


def shop_menu():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button(label='–û—Ç–ø—É—Å–∫ –Ω–∞ 3 –¥–Ω—è', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button(label='100 –∞–π—Ä–æ–Ω–æ–≤', color=VkKeyboardColor.NEGATIVE)
    keyboard.add_line()
    keyboard.add_button(label='–û—Ç–ø—É—Å–∫ –Ω–∞ 5 –¥–Ω–µ–π', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button(label='200 –∞–π—Ä–æ–Ω–æ–≤', color=VkKeyboardColor.NEGATIVE)
    keyboard.add_line()
    keyboard.add_button(label='–û—Ç–ø—É—Å–∫ –Ω–∞ 7 –¥–Ω–µ–π', color=VkKeyboardColor.POSITIVE)
    keyboard.add_button(label='500 –∞–π—Ä–æ–Ω–æ–≤', color=VkKeyboardColor.NEGATIVE)
    keyboard.add_line()
    keyboard.add_button(label='–î—Ä–æ–ø-–∫–µ–π—Å', color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button(label='–û–±–º–µ–Ω –≤–∞–ª—é—Ç–∞–º–∏', color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button(label='–í –º–µ–Ω—é', color=VkKeyboardColor.SECONDARY)
    return keyboard


def bot():
    try:
        global command
        long_poll = auth()
        users = Users()
        rcon = Rcon()
        print('[!] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')
        api = Api(token=getSettings().get('token'), user_token=getSettings().get('user_token'))
        print('[!] –ê–ø–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ!')
        for event in long_poll.listen():
            if event.type == VkBotEventType.MESSAGE_NEW:
                user_id = event.object['message']['from_id']
                peer_id = event.object['message']['peer_id']
                message_id = event.object['message']['id']

                text = event.object['message']['text']
                args = text.split()
                try:
                    command = args[0]
                    del args[0]
                except:
                    pass

                if text == '–û–±–º–µ–Ω –≤–∞–ª—é—Ç–∞–º–∏':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: –û–±–º–µ–Ω –≤–∞–ª—é—Ç–∞–º–∏\n' \
                           '‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å - 10üí∏=200.000$, 1.000.000$=10üí∏\n' \
                           '‚îú –î–ª—è –æ–±–º–µ–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å @work_logs –∏–ª–∏ @krushbtw.'
                    api.send(peer_id=peer_id, text=text)

                if text == '–û—Ç–ø—É—Å–∫ –Ω–∞ 7 –¥–Ω–µ–π':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: –û—Ç–ø—É—Å–∫ –Ω–∞ 7 –¥–Ω–µ–π\n' \
                           f'‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –í—ã –±—É–¥–µ—Ç–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã –æ—Ç —Å–≤–æ–∏—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –Ω–∞ 7 –¥–Ω–µ–π\n' \
                           f'‚îú –¶–µ–Ω–∞: {getSettings().get("shop")["otpusk_7_days"]["price"]}üí∏'
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_callback_button(label='–ö—É–ø–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={"text": "OK.", 'hash': f'{peer_id}_buy_otpusk7',
                                                          "type": "show_snackbar"}
                                                 )
                    api.send_keyboard(message=text, peer_id=peer_id, keyboard=keyboard.get_keyboard())

                if text == '–û—Ç–ø—É—Å–∫ –Ω–∞ 5 –¥–Ω–µ–π':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: –û—Ç–ø—É—Å–∫ –Ω–∞ 5 –¥–Ω–µ–π\n' \
                           f'‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –í—ã –±—É–¥–µ—Ç–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã –æ—Ç —Å–≤–æ–∏—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –Ω–∞ 5 –¥–Ω–µ–π\n' \
                           f'‚îú –¶–µ–Ω–∞: {getSettings().get("shop")["otpusk_5_days"]["price"]}üí∏'
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_callback_button(label='–ö—É–ø–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={"text": "OK.", 'hash': f'{peer_id}_buy_otpusk5',
                                                          "type": "show_snackbar"}
                                                 )
                    api.send_keyboard(message=text, peer_id=peer_id, keyboard=keyboard.get_keyboard())

                if text == '–û—Ç–ø—É—Å–∫ –Ω–∞ 3 –¥–Ω—è':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: –û—Ç–ø—É—Å–∫ –Ω–∞ 3 –¥–Ω—è\n' \
                           f'‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –í—ã –±—É–¥–µ—Ç–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã –æ—Ç —Å–≤–æ–∏—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –Ω–∞ 3 –¥–Ω—è\n' \
                           f'‚îú –¶–µ–Ω–∞: {getSettings().get("shop")["otpusk_3_days"]["price"]}üí∏'
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_callback_button(label='–ö—É–ø–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={"text": "OK.", 'hash': f'{peer_id}_buy_otpusk3',
                                                          "type": "show_snackbar"}
                                                 )
                    api.send_keyboard(message=text, peer_id=peer_id, keyboard=keyboard.get_keyboard())

                if text == '500 –∞–π—Ä–æ–Ω–æ–≤':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: 500 –∞–π—Ä–æ–Ω–æ–≤\n' \
                           f'‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –í–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞—Å—Ç—Å—è 500 –∞–π—Ä–æ–Ω–æ–≤ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏ —Ä–µ–∂–∏–º\n' \
                           f'‚îú –¶–µ–Ω–∞: {getSettings().get("shop")["donate_money_500"]["price"]}üí∏'
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_callback_button(label='–ö—É–ø–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={"text": "OK.", 'hash': f'{peer_id}_buy_500donmoney',
                                                          "type": "show_snackbar"}
                                                 )
                    api.send_keyboard(message=text, peer_id=peer_id, keyboard=keyboard.get_keyboard())

                if text == '200 –∞–π—Ä–æ–Ω–æ–≤':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: 200 –∞–π—Ä–æ–Ω–æ–≤\n' \
                           f'‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –í–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞—Å—Ç—Å—è 200 –∞–π—Ä–æ–Ω–æ–≤ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏ —Ä–µ–∂–∏–º\n' \
                           f'‚îú –¶–µ–Ω–∞: {getSettings().get("shop")["donate_money_200"]["price"]}üí∏'
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_callback_button(label='–ö—É–ø–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={"text": "OK.", 'hash': f'{peer_id}_buy_200donmoney',
                                                          "type": "show_snackbar"}
                                                 )
                    api.send_keyboard(message=text, peer_id=peer_id, keyboard=keyboard.get_keyboard())

                if text == '100 –∞–π—Ä–æ–Ω–æ–≤':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: 100 –∞–π—Ä–æ–Ω–æ–≤\n' \
                           f'‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –í–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞—Å—Ç—Å—è 100 –∞–π—Ä–æ–Ω–æ–≤ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏ —Ä–µ–∂–∏–º\n' \
                           f'‚îú –¶–µ–Ω–∞: {getSettings().get("shop")["donate_money_100"]["price"]}üí∏'
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_callback_button(label='–ö—É–ø–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={"text": "OK.", 'hash': f'{peer_id}_buy_100donmoney',
                                                          "type": "show_snackbar"}
                                                 )
                    api.send_keyboard(message=text, peer_id=peer_id, keyboard=keyboard.get_keyboard())

                if text == '–î—Ä–æ–ø-–∫–µ–π—Å':
                    text = '[‚ÑπÔ∏è] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n' \
                           '‚îú –ù–∞–∑–≤–∞–Ω–∏–µ: –î—Ä–æ–ø-–∫–µ–π—Å\n' \
                           f'‚îú –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –í–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞—Å—Ç—Å—è –¥—Ä–æ–ø-–∫–µ–π—Å –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏ —Ä–µ–∂–∏–º\n' \
                           f'‚îú –¶–µ–Ω–∞: {getSettings().get("shop")["case"]["price"]}üí∏'
                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_callback_button(label='–ö—É–ø–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={"text": "OK.", 'hash': f'{peer_id}_buy_case',
                                                          "type": "show_snackbar"}
                                                 )
                    api.send_keyboard(message=text, peer_id=peer_id, keyboard=keyboard.get_keyboard())

                if text == '–û–Ω–ª–∞–π–Ω':
                    names = [i for i in users.getAll()]
                    names1 = []
                    admins = []
                    for i in names:
                        names1.append(users.getName(str(i)))
                    a = requests.get(url='http://ironmine.fun/api/rcon/index.php?mode=grief&command=list').text
                    all_grief = a.split()[1]
                    a = a.split(':')
                    del a[0]
                    b = requests.get(url='http://ironmine.fun/api/rcon/index.php?mode=surv&command=list').text
                    all_surv = b.split(' ')[1]
                    b = b.split(':')
                    del b[0]
                    if len(b[0]) != 0:
                        b = b[0].replace('\r\n', '')
                    else:
                        b = '–ü—É—Å—Ç–æ.'
                    if len(a[0]) != 0:
                        a = a[0].replace('\r\n', '')
                    else:
                        a = '–ü—É—Å—Ç–æ.'
                    text = f'[‚ÑπÔ∏è] –û–Ω–ª–∞–π–Ω –Ω–∞ —Ä–µ–∂–∏–º–µ –≥—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–∞ ({all_grief}):\n‚îú {"".join(a)}\n\n[‚ÑπÔ∏è] –û–Ω–ª–∞–π–Ω –Ω–∞ —Ä–µ–∂–∏–º–µ –≤—ã–∂–∏–≤–∞–Ω–∏—è ({all_surv}):\n‚îú {"".join(b)}'
                    api.send(peer_id=peer_id, text=text)

                if text == '–¢–æ–ø –±–∞–ª–∞–Ω—Å–æ–≤':
                    text = '[üîù] –¢–æ–ø –±–∞–ª–∞–Ω—Å–æ–≤:\n'
                    f = json.loads(open(file='users.json', mode='r').read())
                    a, a1 = [], {}
                    for i in f:
                        if users.getUser(str(i))['balance'] != 0:
                            a.append(users.getUser(str(i))['balance'])
                            a1[users.getUser(str(i))['balance']] = users.getUser(str(i))['id']
                    a.sort()
                    a.reverse()
                    for i in a:
                        text += f'‚îú {users.getName(a1.get(i))} | {users.getRole(a1.get(i))} - {users.getBalance(a1.get(i))}.\n'
                    api.send(peer_id=peer_id, text=text)

                if text == '–ê–π–¥–∏—à–Ω–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
                    text = '[‚úÖ] –°–ø–∏—Å–æ–∫:\n'
                    n = 1
                    f = json.loads(open(file='users.json', mode='r').read())
                    for i in f:
                        info = users.getUser(str(i))
                        text += f"{n}. {info['name']} - {info['id']}\n"
                        n += 1
                    api.send(peer_id=peer_id, text=text)

                if text == '–í –º–µ–Ω—é':
                    api.send_keyboard(peer_id=peer_id, keyboard=menu().get_keyboard(), message='[‚úÖ] –û—Ç–ø—Ä–∞–≤–ª—è—é –º–µ–Ω—é...')

                if text == '–ú–∞–≥–∞–∑–∏–Ω':
                    api.send_keyboard(peer_id=peer_id, message='[‚úÖ] –ú–∞–≥–∞–∑–∏–Ω:', keyboard=shop_menu().get_keyboard())

                if text == '–ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π':
                    keyboard = VkKeyboard(inline=True, one_time=False)
                    f = json.loads(open(file='users.json', mode='r').read())
                    n = 0
                    for i in f:
                        keyboard.add_callback_button(label=str(users.getName(str(i))), color=VkKeyboardColor.PRIMARY,
                                                     payload={"text": "OK.", 'hash': f'{users.getName(str(i))}_profile',
                                                              "type": "show_snackbar"})
                        if n % 4 == 0:
                            keyboard.add_line()
                        else:
                            pass
                        n += 1
                    api.send_keyboard(peer_id=peer_id, message='[‚úÖ] –ß–µ–π –ø—Ä–æ—Ñ–∏–ª—å —Å–º–æ—Ç—Ä–∏–º?',
                                      keyboard=keyboard.get_keyboard())

                if text == 'Admin panel':
                    if users.getRoleById(str(user_id)) >= getSettings().get('min_role_for_admin_panel'):
                        api.send_keyboard(peer_id=peer_id, keyboard=admin_menu().get_keyboard(),
                                          message='[‚úÖ] –û—Ç–ø—Ä–∞–≤–ª—è—é –º–µ–Ω—é...')
                    else:
                        api.send(peer_id=peer_id, text='[‚ùó] –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤!')

                if text == '–¢–æ–ø –º–µ–¥–∞–ª–µ–π':
                    text = '[üîù] –¢–æ–ø –º–µ–¥–∞–ª–µ–π:\n'
                    f = json.loads(open(file='users.json', mode='r').read())
                    a, a1 = [], {}
                    for i in f:
                        if users.getUser(str(i))['medals'] != 0:
                            a.append(users.getUser(str(i))['medals'])
                            a1[users.getUser(str(i))['medals']] = users.getUser(str(i))['id']
                    a.sort()
                    a.reverse()
                    for i in a:
                        if users.getRoleById(a1.get(i)) < 4:
                            text += f'‚îú {users.getName(a1.get(i))} | {users.getRole(a1.get(i))} - {users.getMedals(a1.get(i))}.\n'
                    api.send(peer_id=peer_id, text=text)

                if text == '–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞':
                    f = json.loads(open(file='users.json', mode='r').read())
                    norma = "[‚ÑπÔ∏è] –î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞:\n"
                    for i in f:
                        if users.getRoleById(str(i)) == 1:
                            if users.getDayReports(str(i)) >= 5:
                                norma += f"‚îú {users.getName(str(i))} | {users.getRole(str(i))} - ‚úÖ\n"
                            else:
                                norma += f"‚îú {users.getName(str(i))} | {users.getRole(str(i))} - ‚õî\n"
                        elif users.getRoleById(str(i)) == 2:
                            if users.getDayReports(str(i)) >= 7:
                                norma += f"‚îú {users.getName(str(i))} | {users.getRole(str(i))} - ‚úÖ\n"
                            else:
                                norma += f"‚îú {users.getName(str(i))} | {users.getRole(str(i))} - ‚õî\n"
                    api.send(peer_id=peer_id, text=norma)

                if text == '–¢–æ–ø –≤–∞—Ä–Ω–æ–≤':
                    text = '[üîù] –¢–æ–ø –≤–∞—Ä–Ω–æ–≤:\n'
                    f = json.loads(open(file='users.json', mode='r').read())
                    for i in f:
                        if users.getRoleById(str(i)) < 4:
                            text += f'‚îú {users.getName(str(i))} | {users.getRole(str(i))} - {users.getWarns(str(i))}/3.\n'
                    api.send(peer_id=peer_id, text=text)

                if text == '–°–±—Ä–æ—Å –¥–Ω–µ–≤–Ω–æ–≥–æ —Ç–æ–ø–∞':
                    f = json.loads(open(file='users.json', mode='r').read())
                    a, a1 = [], {}
                    for i in f:
                        if users.getUser(str(i))['days_reports'] != 0:
                            a.append(users.getUser(str(i))['days_reports'])
                            a1[users.getUser(str(i))['days_reports']] = users.getUser(str(i))['id']
                    a.sort()
                    a.reverse()
                    if len(a) != 0:
                        id = a1.get(a[0])
                        api.send_user(user_id=id,
                                      text='[‚ù§Ô∏è] –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ—Ö–≤–∞–ª—É –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∑–∞ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ –ø–æ –æ—Ç—á–µ—Ç–∞–º –∑–∞ –¥–µ–Ω—å!')
                        for i in f:
                            users.clearDayReports(str(i))
                        api.send(peer_id=peer_id,
                                 text=f'[‚úÖ] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å —Å–±—Ä–æ—à–µ–Ω–∞! –°–∞–º—ã–º –∞–∫—Ç–∏–≤–Ω—ã–º –æ–∫–∞–∑–∞–ª—Å—è {users.getName(str(id))}')
                    else:
                        api.send(peer_id=peer_id, text='[‚ùó] –°–±—Ä–∞—Å—ã–≤–∞—Ç—å –Ω–µ—á–µ–≥–æ.')

                if text == '–°–±—Ä–æ—Å –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —Ç–æ–ø–∞':
                    f = json.loads(open(file='users.json', mode='r').read())
                    a, a1 = [], {}
                    for i in f:
                        if users.getUser(str(i))['week_reports'] != 0:
                            a.append(users.getUser(str(i))['week_reports'])
                            a1[users.getUser(str(i))['week_reports']] = users.getUser(str(i))['id']
                    a.sort()
                    a.reverse()
                    id = a1.get(a[0])
                    users.addMedals(str(id))
                    api.send_user(user_id=id,
                                  text='[üèÖ] –í—ã –ø–æ–ª—É—á–∏–ª–∏ –º–µ–¥–∞–ª—å–∫—É –∑–∞ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ –ø–æ –æ—Ç—á–µ—Ç–∞–º –∑–∞ –Ω–µ–¥–µ–ª—é!')
                    for i in f:
                        users.clearWeekReports(str(i))
                    api.send(peer_id=peer_id,
                             text=f'[‚úÖ] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é —Å–±—Ä–æ—à–µ–Ω–∞! –ú–µ–¥–∞–ª—å –≤—Ä—É—á–µ–Ω–∞ {users.getName(str(id))}')

                if text == '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
                    norma = ""
                    if users.getRoleById(str(user_id)) == 1:
                        if users.getDayReports(str(user_id)) >= 5:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                        else:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                    elif users.getRoleById(str(user_id)) == 2:
                        if users.getDayReports(str(user_id)) >= 7:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                        else:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                    else:
                        norma += '–í–∞–º –Ω–µ –Ω—É–∂–Ω–∞ –¥–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞'
                    text = f"""[üë§] –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
‚îú –í–∞—à –Ω–∏–∫: {users.getName(str(user_id))} üëÄ
‚îú –í–∞—à–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: {users.getRole(str(user_id))} üë§
‚îú –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –Ω–∞ –≥—Ä–∏—Ñ–µ / –≤—ã–∂–µ: {users.getGroupGrief(str(user_id))} / {users.getGroupSurv(str(user_id))} üëë
‚îú –ú–µ–¥–∞–ª–µ–π: {users.getMedals(str(user_id))} üèÖ
‚îú –í–∞—Ä–Ω–æ–≤: {users.getWarns(str(user_id))}/3 ‚õî
‚îú –ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))} üí∏
‚îú –í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤: {users.getAllReports(str(user_id))} üì¶
‚îú –û—Ç—á–µ—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: {users.getWeekReports(str(user_id))} üì•
‚îú –û—Ç—á–µ—Ç–æ–≤ –∑–∞ –¥–µ–Ω—å: {users.getDayReports(str(user_id))} ({norma}) üì©"""
                    api.send(peer_id=peer_id, text=text)

                if text == '–¢–æ–ø –æ—Ç—á–µ—Ç–æ–≤':
                    a, a1 = [], {}
                    b, b1 = [], {}
                    c, c1 = [], {}
                    f = json.loads(open(file='users.json', mode='r').read())
                    for i in f:
                        if users.getUser(str(i))['all_reports'] != 0:
                            a.append(users.getUser(str(i))['all_reports'])
                            a1[users.getUser(str(i))['all_reports']] = users.getUser(str(i))['name']
                    a.sort()
                    a.reverse()
                    for i in f:
                        if users.getUser(str(i))['week_reports'] != 0:
                            b.append(users.getUser(str(i))['week_reports'])
                            b1[users.getUser(str(i))['week_reports']] = users.getUser(str(i))['name']
                    b.sort()
                    b.reverse()
                    for i in f:
                        if users.getUser(str(i))['days_reports'] != 0:
                            c.append(users.getUser(str(i))['days_reports'])
                            c1[users.getUser(str(i))['days_reports']] = users.getUser(str(i))['name']
                    c.sort()
                    c.reverse()
                    text = f"[üîù] –¢–æ–ø –æ—Ç—á–µ—Ç–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: (–°—É–º–º–∞—Ä–Ω–æ: {str(sum(a))})\n"
                    for i in a:
                        text += f'‚îú {a1.get(i)} - {i}\n'
                    text += f'\n[üîù] –¢–æ–ø –∑–∞ –Ω–µ–¥–µ–ª—é: (–°—É–º–º–∞—Ä–Ω–æ: {str(sum(b))})\n'
                    for i in b:
                        text += f'‚îú {b1.get(i)} - {i}\n'
                    text += f'\n[üîù] –¢–æ–ø –∑–∞ –¥–µ–Ω—å: (–°—É–º–º–∞—Ä–Ω–æ: {str(sum(c))})\n'
                    for i in c:
                        text += f'‚îú {c1.get(i)} - {i}\n'

                    api.send(peer_id=peer_id, text=text)

                if command == '/start':
                    api.send_keyboard(peer_id=peer_id, keyboard=menu().get_keyboard(), message='[‚úÖ] –û—Ç–ø—Ä–∞–≤–ª—è—é –º–µ–Ω—é...')

                if command == "/test":
                    pass

                if command == "/add":
                    if len(args) >= 4:
                        users.add(str(args[0]), str(args[1]), str(args[2]), str(args[3]))
                        api.send(peer_id=peer_id, text='[‚úÖ] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω!')
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –û—à–∏–±–∫–∞!\n[‚ùì] –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /add user_id nickname group_grief group_surv')

                if command == '/report':
                    if len(args) >= 2 and len(event.object['message']['attachments']) != 0:
                        rand_number = random.randint(0, 999999)
                        reason = event.object['message']['text'].replace('/report', ' ').split()
                        del reason[0]
                        reason = ' '.join(reason)
                        keyboard = VkKeyboard(inline=True, one_time=False)
                        a = api.send(peer_id=peer_id, text=f'[‚úÖ] –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ï–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–π–¥–∏ - {rand_number}\n–û–∂–∏–¥–∞–π—Ç–µ...')['response']
                        keyboard.add_callback_button(label='–û–¥–æ–±—Ä–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                     payload={'hash': f'{user_id}_{peer_id}_{a}_{rand_number}_yesreport',
                                                              "type": "show_snackbar", "text": 'OK.'})
                        keyboard.add_callback_button(label='–û—Ç–∫–∞–∑–∞—Ç—å', color=VkKeyboardColor.NEGATIVE,
                                                     payload={'hash': f'{user_id}_{peer_id}_{a}_{rand_number}_noreport',
                                                              "type": "show_snackbar", "text": 'OK.'})
                        text = f'[‚úÖ] –ü—Ä–∏—à–µ–ª –Ω–æ–≤—ã–π –æ—Ç—á–µ—Ç! –ï–≥–æ –∞–π–¥–∏ - {rand_number}.\n' \
                               f'[üë§] –û—Ç–ø—Ä–∞–≤–∏–ª: {users.getUser(str(user_id))["name"]} (@id{user_id} | {users.getRole(str(user_id))})\n' \
                               f'[ü™ö] –ù–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è: {args[0]}\n' \
                               f'[‚úâÔ∏è] –ü—Ä–∏—á–∏–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {reason}\n' \
                               f'[üì∑] –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞:'
                        attachments = event.object['message']['attachments']
                        att = []
                        for i in attachments:
                            type = i['type']
                            attach = i[type]
                            att.append(f'{type}{attach["owner_id"]}_{attach["id"]}_{attach["access_key"]}')
                        api.send_attachment(keyboard=keyboard.get_keyboard(), peer_id=getSettings().get('chat_id'), text=text, attachments=','.join(att))
                    else:
                        api.send_user(user_id=user_id, text='[‚ùì] –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n'
                                                            '/report\n'
                                                            '–ù–∏–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è\n'
                                                            '–ü—Ä–∏—á–∏–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è\n'
                                                            '–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ)\n\n'
                                                            '–ü–†–ò–ú–ï–†(–¢–û–õ–¨–ö–û –¢–ê–ö):\n'
                                                            'JordanBreakwood\n'
                                                            '1.1, 1.2, 1.3 –∏ —Ç.–¥\n'
                                                            '*–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞*')

                if command == '/rcon':
                    if len(args) >= 1:
                        modes = ['grief', 'surv']
                        a = args[0]
                        if args[0] in modes:
                            del args[0]
                            b = rcon.send(mode=a, command=' '.join(args))
                            api.send(peer_id=peer_id, text=f'[‚úÖ] –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:\n‚îú {b}')
                        else:
                            api.send(peer_id=peer_id, text='[‚ùì] –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /rcon <grief –∏–ª–∏ surv> command.')
            elif event.type == VkBotEventType.MESSAGE_EVENT:

                global id1
                hash = event.object['payload']['hash']
                peer_id = event.object['peer_id']
                message_id = event.object['conversation_message_id']

                if '_grief_' in hash:
                    a = hash.split('_')
                    nick = a[0]
                    user_id = a[3]
                    b = a[2]
                    if b == 'don100':
                        rcon.send(mode='grief', command=f'givedonmoney {nick} 100')
                        users.minusBalance(str(user_id), getSettings().get('shop')['donate_money_100']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] 100 –∞–π—Ä–æ–Ω–æ–≤ –≤—ã–¥–∞–Ω–æ –Ω–∞ —Ä–µ–∂–∏–º–µ –≥—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                    if b == 'don200':
                        rcon.send(mode='grief', command=f'givedonmoney {nick} 200')
                        users.minusBalance(str(user_id), getSettings().get('shop')['donate_money_200']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] 200 –∞–π—Ä–æ–Ω–æ–≤ –≤—ã–¥–∞–Ω–æ –Ω–∞ —Ä–µ–∂–∏–º–µ –≥—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                    if b == 'don500':
                        rcon.send(mode='grief', command=f'givedonmoney {nick} 500')
                        users.minusBalance(str(user_id), getSettings().get('shop')['donate_money_500']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] 500 –∞–π—Ä–æ–Ω–æ–≤ –≤—ã–¥–∞–Ω–æ –Ω–∞ —Ä–µ–∂–∏–º–µ –≥—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                    if b == 'case':
                        rcon.send(mode='grief', command=f'drc add {nick} 1')
                        users.minusBalance(str(user_id), getSettings().get('shop')['case']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] –î—Ä–æ–ø-–∫–µ–π—Å –≤—ã–¥–∞–Ω –Ω–∞ —Ä–µ–∂–∏–º –≥—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')

                if '_surv_' in hash:
                    a = hash.split('_')
                    nick = a[0]
                    user_id = a[3]
                    b = a[2]
                    if b == 'don100':
                        rcon.send(mode='surv', command=f'givedonmoney {nick} 100')
                        users.minusBalance(str(user_id), getSettings().get('shop')['donate_money_100']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] 100 –∞–π—Ä–æ–Ω–æ–≤ –≤—ã–¥–∞–Ω–æ –Ω–∞ —Ä–µ–∂–∏–º–µ –≤—ã–∂–∏–≤–∞–Ω–∏–µ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                    if b == 'don200':
                        rcon.send(mode='surv', command=f'givedonmoney {nick} 200')
                        users.minusBalance(str(user_id), getSettings().get('shop')['donate_money_200']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] 200 –∞–π—Ä–æ–Ω–æ–≤ –≤—ã–¥–∞–Ω–æ –Ω–∞ —Ä–µ–∂–∏–º–µ –≤—ã–∂–∏–≤–∞–Ω–∏–µ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                    if b == 'don500':
                        rcon.send(mode='surv', command=f'givedonmoney {nick} 500')
                        users.minusBalance(str(user_id), getSettings().get('shop')['donate_money_500']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] 500 –∞–π—Ä–æ–Ω–æ–≤ –≤—ã–¥–∞–Ω–æ –Ω–∞ —Ä–µ–∂–∏–º–µ –≤—ã–∂–∏–≤–∞–Ω–∏–µ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                    if b == 'case':
                        rcon.send(mode='surv', command=f'drc add {nick} 1')
                        users.minusBalance(str(user_id), getSettings().get('shop')['case']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] –î—Ä–æ–ø-–∫–µ–π—Å –≤—ã–¥–∞–Ω –Ω–∞ —Ä–µ–∂–∏–º –≤—ã–∂–∏–≤–∞–Ω–∏–µ (–ù–∏–∫: {nick})\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')

                if 'case' in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    if users.getBalance(str(user_id)) >= getSettings().get('shop')['case']['price']:
                        keyboard = VkKeyboard(inline=True, one_time=False)
                        keyboard.add_callback_button(label='–ì—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ', color=VkKeyboardColor.NEGATIVE, payload={
                            'hash': f'{users.getName(str(user_id))}_grief_case_{user_id}', "type": "show_snackbar",
                            "text": 'OK.'})
                        keyboard.add_callback_button(label='–í—ã–∂–∏–≤–∞–Ω–∏–µ', color=VkKeyboardColor.POSITIVE, payload={
                            'hash': f'{users.getName(str(user_id))}_surv_case_{user_id}', "type": "show_snackbar",
                            "text": 'OK.'})
                        api.send_keyboard(peer_id=peer_id, message='[‚úÖ] –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:',
                                          keyboard=keyboard.get_keyboard())
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')

                if 'otpusk3' in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    if users.getBalance(str(user_id)) >= getSettings().get('shop')['otpusk_3_days']['price']:
                        users.minusBalance(str(user_id), getSettings().get('shop')['otpusk_3_days']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] –í—ã –∫—É–ø–∏–ª–∏ –æ—Ç–ø—É—Å–∫ –Ω–∞ 3 –¥–Ω—è\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                        for i in getSettings().get('admins'):
                            api.send(peer_id=i, text=f'[‚ÑπÔ∏è] {users.getName(str(user_id))} –∫—É–ø–∏–ª –æ—Ç–ø—É—Å–∫ –Ω–∞ 3 –¥–Ω—è.')
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')

                if 'otpusk5' in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    if users.getBalance(str(user_id)) >= getSettings().get('shop')['otpusk_5_days']['price']:
                        users.minusBalance(str(user_id), getSettings().get('shop')['otpusk_5_days']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] –í—ã –∫—É–ø–∏–ª–∏ –æ—Ç–ø—É—Å–∫ –Ω–∞ 5 –¥–Ω–µ–π\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                        for i in getSettings().get('admins'):
                            api.send(peer_id=i, text=f'[‚ÑπÔ∏è] {users.getName(str(user_id))} –∫—É–ø–∏–ª –æ—Ç–ø—É—Å–∫ –Ω–∞ 5 –¥–Ω–µ–π.')
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')

                if 'otpusk7' in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    if users.getBalance(str(user_id)) >= getSettings().get('shop')['otpusk_7_days']['price']:
                        users.minusBalance(str(user_id), getSettings().get('shop')['otpusk_7_days']['price'])
                        api.send(peer_id=peer_id, text=f'[‚úÖ] –í—ã –∫—É–ø–∏–ª–∏ –æ—Ç–ø—É—Å–∫ –Ω–∞ 7 –¥–Ω–µ–π\n–ë–∞–ª–∞–Ω—Å: {users.getBalance(str(user_id))}üí∏')
                        for i in getSettings().get('admins'):
                            api.send(peer_id=i, text=f'[‚ÑπÔ∏è] {users.getName(str(user_id))} –∫—É–ø–∏–ª –æ—Ç–ø—É—Å–∫ –Ω–∞ 7 –¥–Ω–µ–π.')
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')

                if '_100donmoney' in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    if users.getBalance(str(user_id)) >= getSettings().get('shop')['donate_money_100']['price']:
                        keyboard = VkKeyboard(inline=True, one_time=False)
                        keyboard.add_callback_button(label='–ì—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ', color=VkKeyboardColor.NEGATIVE, payload={'hash': f'{users.getName(str(user_id))}_grief_don100_{user_id}', "type": "show_snackbar", "text": 'OK.'})
                        keyboard.add_callback_button(label='–í—ã–∂–∏–≤–∞–Ω–∏–µ', color=VkKeyboardColor.POSITIVE, payload={'hash': f'{users.getName(str(user_id))}_surv_don100_{user_id}', "type": "show_snackbar", "text": 'OK.'})
                        api.send_keyboard(peer_id=peer_id, message='[‚úÖ] –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:', keyboard=keyboard.get_keyboard())
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')

                if '_200donmoney' in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    if users.getBalance(str(user_id)) >= getSettings().get('shop')['donate_money_200']['price']:
                        keyboard = VkKeyboard(inline=True, one_time=False)
                        keyboard.add_callback_button(label='–ì—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ', color=VkKeyboardColor.NEGATIVE, payload={'hash': f'{users.getName(str(user_id))}_grief_don200_{user_id}', "type": "show_snackbar", "text": 'OK.'})
                        keyboard.add_callback_button(label='–í—ã–∂–∏–≤–∞–Ω–∏–µ', color=VkKeyboardColor.POSITIVE, payload={'hash': f'{users.getName(str(user_id))}_surv_don200_{user_id}', "type": "show_snackbar", "text": 'OK.'})
                        api.send_keyboard(peer_id=peer_id, message='[‚úÖ] –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:', keyboard=keyboard.get_keyboard())
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')

                if '_500donmoney' in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    if users.getBalance(str(user_id)) >= getSettings().get('shop')['donate_money_500']['price']:
                        keyboard = VkKeyboard(inline=True, one_time=False)
                        keyboard.add_callback_button(label='–ì—Ä–∏—Ñ–µ—Ä—Å—Ç–≤–æ', color=VkKeyboardColor.NEGATIVE, payload={'hash': f'{users.getName(str(user_id))}_grief_don500_{user_id}', "type": "show_snackbar", "text": 'OK.'})
                        keyboard.add_callback_button(label='–í—ã–∂–∏–≤–∞–Ω–∏–µ', color=VkKeyboardColor.POSITIVE, payload={'hash': f'{users.getName(str(user_id))}_surv_don500_{user_id}', "type": "show_snackbar", "text": 'OK.'})
                        api.send_keyboard(peer_id=peer_id, message='[‚úÖ] –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:', keyboard=keyboard.get_keyboard())
                    else:
                        api.send(peer_id=peer_id, text='[‚ûñ] –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')

                if "_yesreport" in hash:
                    a = hash.split('_')
                    user_id = a[0]
                    peer_id = a[1]
                    message_id = a[2]
                    api.reply_to(peer_id=peer_id, message_id=message_id, photos=getSettings().get('photos')['report_yes'])
                    users.addReport(user_id=str(user_id))

                if "_noreport" in hash:
                    a = hash.split('_')
                    peer_id = a[1]
                    message_id = a[2]
                    api.reply_to(peer_id=peer_id, message_id=message_id, photos=getSettings().get('photos')['report_no'])

                if "_balanceminus" in hash:
                    id2 = str(hash.split('_')[0])
                    users.setBalance(id2)
                    api.send(peer_id=peer_id, text='[‚úÖ] –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω—É–ª—ë–Ω!')
                    api.send(peer_id=id2, text=f'[‚úÖ] –ê–¥–º–∏–Ω—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω—É–ª–∏–ª –≤–∞—à –±–∞–ª–∞–Ω—Å!')

                if '_give_' in hash:
                    id2 = str(hash.split('_')[0])
                    count = int(hash.split('_')[2])
                    users.addBalance(id2, count)
                    api.send(peer_id=peer_id, text=f'[‚úÖ] –ë–∞–ª–∞–Ω—Å –≤—ã–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é! –¢–µ–ø–µ—Ä—å –µ–≥–æ –±–∞–ª–∞–Ω—Å {users.getBalance(id2)}üí∏')
                    api.send(peer_id=id2, text=f'[‚úÖ] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤—ã–¥–∞–ª –≤–∞–º {count}üí∏')

                if '_minus_' in hash:
                    id2 = str(hash.split('_')[0])
                    count = int(hash.split('_')[2])
                    if users.getBalance(id2) >= count:
                        users.minusBalance(id2, count)
                        api.send(peer_id=peer_id, text=f'[‚úÖ] –ë–∞–ª–∞–Ω—Å —Å–Ω—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é! –¢–µ–ø–µ—Ä—å –µ–≥–æ –±–∞–ª–∞–Ω—Å {users.getBalance(id2)}üí∏')
                        api.send(peer_id=id2, text=f'[‚úÖ] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–Ω—è–ª —É –≤–∞—Å {count}üí∏')
                    else:
                        api.send(peer_id=peer_id, text=f'[‚úÖ] –°–Ω–∏–º–∞—Ç—å –Ω–µ—á–µ–≥–æ!')

                if "_balancevichet" in hash:
                    keyboard = VkKeyboard(inline=True, one_time=False)
                    keyboard.add_callback_button(label='10', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_10', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='20', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_20', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='30', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_30', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='40', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_40', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='50', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_50', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_line()
                    keyboard.add_callback_button(label='60', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_60', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='70', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_70', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='80', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_80', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='90', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_90', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='100', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_minus_100', "type": "show_snackbar", "text": 'OK.'})
                    api.send_keyboard(peer_id=peer_id, keyboard=keyboard.get_keyboard(), message='[‚úÖ] –°–∫–æ–ª—å–∫–æ?')

                if "_givebalance" in hash:
                    keyboard = VkKeyboard(inline=True, one_time=False)
                    keyboard.add_callback_button(label='10', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_10', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='20', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_20', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='30', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_30', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='40', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_40', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='50', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_50', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_line()
                    keyboard.add_callback_button(label='60', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_60', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='70', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_70', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='80', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_80', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='90', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_90', "type": "show_snackbar", "text": 'OK.'})
                    keyboard.add_callback_button(label='100', color=VkKeyboardColor.PRIMARY, payload={'hash': f'{str(id1)}_give_100', "type": "show_snackbar", "text": 'OK.'})
                    api.send_keyboard(peer_id=peer_id, keyboard=keyboard.get_keyboard(), message='[‚úÖ] –°–∫–æ–ª—å–∫–æ?')

                if '_kick' in hash:
                    id2 = str(hash.split('_')[0])
                    rcon.send(mode='grief', command=f'takeoff {users.getName(id2)}')
                    rcon.send(mode='grief', command=f'setgroup {users.getName(id2)} {users.getGroupGrief(id2)}')
                    rcon.send(mode='surv', command=f'takeoff {users.getName(id2)}')
                    rcon.send(mode='surv', command=f'setgroup {users.getName(id2)} {users.getGroupSurv(id2)}')
                    users.kick(id2)
                    api.send(peer_id=peer_id, text='[‚úÖ] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–æ–ª–µ–Ω!')
                    api.block_user(user_id=id2, group_id=getSettings().get('group_id'))

                if '_role2' in hash:
                    id2 = str(hash.split('_')[0])
                    if users.getRoleById(id2) > 1:
                        users.setRole(id2, users.getRoleById(id2)-1)
                        api.send(peer_id=peer_id,
                                 text='[‚úÖ] –î–æ–ª–∂–Ω–æ—Å—Ç—å –ø–æ–Ω–∏–∂–µ–Ω–∞!\n'
                                      f'[‚ÑπÔ∏è] –¢–µ–ø–µ—Ä—å —É {users.getName(id2)} –¥–æ–ª–∂–Ω–æ—Å—Ç—å {users.getRole(id2)}.')
                        api.send_user(user_id=id2,
                                      text=f'[‚ÑπÔ∏è] –í—ã –ø–æ–Ω–∏–∂–µ–Ω—ã! –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å {users.getRole(id2)}')
                    else:
                        api.send(peer_id=peer_id,
                                 text='[‚ùó] –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å!')

                if '_role1' in hash:
                    id2 = str(hash.split('_')[0])
                    if users.getRoleById(id2) < 5:
                        users.setRole(id2, users.getRoleById(id2)+1)

                        api.send(peer_id=peer_id,
                                 text='[‚úÖ] –î–æ–ª–∂–Ω–æ—Å—Ç—å –ø–æ–≤—ã—à–µ–Ω–∞!\n'
                                      f'[‚ÑπÔ∏è] –¢–µ–ø–µ—Ä—å —É {users.getName(id2)} –¥–æ–ª–∂–Ω–æ—Å—Ç—å {users.getRole(id2)}.')
                        api.send_user(user_id=id2,
                                      text=f'[‚ÑπÔ∏è] –í—ã –ø–æ–≤—ã—à–µ–Ω—ã! –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å {users.getRole(id2)}')
                    else:
                        api.send(peer_id=peer_id,
                                 text='[‚ùó] –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å!')

                if '_unwarn' in hash:
                    id2 = str(hash.split("_")[0])
                    if users.getWarns(id2) > 0:
                        users.unwarn(id2)
                        api.send(peer_id=peer_id, text='[‚úÖ] –° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–Ω—è—Ç –≤–∞—Ä–Ω!')
                        api.send_user(user_id=id2,
                                      text=f'[‚úÖ] –° –≤–∞—Å —Å–Ω—è—Ç –≤–∞—Ä–Ω!\n[‚ùì] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –≤–∞—Ä–Ω–æ–≤: {users.getWarns(id2)}/3.')
                    else:
                        api.send(peer_id=peer_id, text='[‚úÖ] –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤–∞—Ä–Ω–æ–≤!')

                if '_addwarn' in hash:
                    id2 = str(hash.split("_")[0])
                    if users.getWarns(id2) == 2:
                        users.kick(id2)
                        api.send(peer_id=peer_id, text='[‚úÖ] –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 3/3 –≤–∞—Ä–Ω–æ–≤, —É–≤–æ–ª—å–Ω—è—é...')
                        api.send_user(user_id=id2, text='[‚úÖ] –í–∞–º –≤—ã–¥–∞–Ω –≤–∞—Ä–Ω!\n[‚ùì] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –≤–∞—Ä–Ω–æ–≤: '
                                                        '3/3.\n[‚ùó] –í—ã —É–≤–æ–ª–µ–Ω—ã!')
                        api.block_user(user_id=id2, group_id=getSettings().get('group_id'))
                    else:
                        users.warn(id2)
                        api.send(peer_id=peer_id, text='[‚úÖ] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–¥–∞–Ω –≤–∞—Ä–Ω!')
                        api.send_user(user_id=id2,
                                      text=f'[‚úÖ] –í–∞–º –≤—ã–¥–∞–Ω –≤–∞—Ä–Ω!\n[‚ùì] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –≤–∞—Ä–Ω–æ–≤: {users.getWarns(id2)}/3.')

                if '_profile' in hash:
                    nick = hash.split('_')[0]
                    f = json.loads(open(file='users.json', mode='r').read())
                    id1 = None
                    for i in f:
                        if users.getName(str(i)) == nick:
                            id1 = i
                    norma = ""
                    if users.getRoleById(str(id1)) == 1:
                        if users.getDayReports(str(id1)) >= 5:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                        else:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                    elif users.getRoleById(str(id1)) == 2:
                        if users.getDayReports(str(id1)) >= 7:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                        else:
                            norma += "–î–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
                    else:
                        norma += '–ù–µ –Ω—É–∂–Ω–∞ –¥–Ω–µ–≤–Ω–∞—è –Ω–æ—Ä–º–∞'
                    text = f"""[üë§] –ü—Ä–æ—Ñ–∏–ª—å:
‚îú –ù–∏–∫: {users.getName(str(id1))} üëÄ
‚îú –î–æ–ª–∂–Ω–æ—Å—Ç—å: {users.getRole(str(id1))} üë§
‚îú –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –Ω–∞ –≥—Ä–∏—Ñ–µ / –≤—ã–∂–µ: {users.getGroupGrief(str(id1))} / {users.getGroupSurv(str(id1))} üëë
‚îú –ú–µ–¥–∞–ª–µ–π: {users.getMedals(str(id1))} üèÖ
‚îú –í–∞—Ä–Ω–æ–≤: {users.getWarns(str(id1))}/3 ‚õî
‚îú –ë–∞–ª–∞–Ω—Å: {users.getBalance(str(id1))} üí∏
‚îú –í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤: {users.getAllReports(str(id1))} üì¶
‚îú –û—Ç—á–µ—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: {users.getWeekReports(str(id1))} üì•
‚îú –û—Ç—á–µ—Ç–æ–≤ –∑–∞ –¥–µ–Ω—å: {users.getDayReports(str(id1))} ({norma}) üì©"""
                    keyboard = VkKeyboard(inline=True, one_time=False)
                    keyboard.add_callback_button(label='–î–∞—Ç—å –≤–∞—Ä–Ω', color=VkKeyboardColor.NEGATIVE,
                                                 payload={'hash': f'{str(id1)}_addwarn', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    keyboard.add_callback_button(label='–°–Ω—è—Ç—å –≤–∞—Ä–Ω', color=VkKeyboardColor.POSITIVE,
                                                 payload={'hash': f'{str(id1)}_unwarn', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    keyboard.add_line()
                    keyboard.add_callback_button(label='–ü–æ–≤—ã—Å–∏—Ç—å', color=VkKeyboardColor.POSITIVE,
                                                 payload={'hash': f'{str(id1)}_role1', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    keyboard.add_callback_button(label='–ü–æ–Ω–∏–∑–∏—Ç—å', color=VkKeyboardColor.NEGATIVE,
                                                 payload={'hash': f'{str(id1)}_role2', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    keyboard.add_line()
                    keyboard.add_callback_button(label='–£–≤–æ–ª–∏—Ç—å', color=VkKeyboardColor.NEGATIVE,
                                                 payload={'hash': f'{str(id1)}_kick', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    keyboard.add_line()
                    keyboard.add_callback_button(label='–í—ã–¥–∞—Ç—å –±–∞–ª–∞–Ω—Å', color=VkKeyboardColor.POSITIVE,
                                                 payload={'hash': f'{str(id1)}_givebalance', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    keyboard.add_callback_button(label='–û–±–Ω—É–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å', color=VkKeyboardColor.SECONDARY,
                                                 payload={'hash': f'{str(id1)}_balanceminus', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    keyboard.add_callback_button(label='–°–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å', color=VkKeyboardColor.NEGATIVE,
                                                 payload={'hash': f'{str(id1)}_balancevichet', "type": "show_snackbar",
                                                          "text": 'OK.'})
                    api.send_keyboard(peer_id=peer_id, message=text, keyboard=keyboard.get_keyboard())

    except Exception as e:
        bot()


if __name__ == "__main__":
    bot()
